// Mocks generated by Mockito 5.0.15 from annotations
// in teste_tokenlab/test/data/repository/movie_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:teste_tokenlab/data/cache_model/cache_data_source/movie_cache_data_source.dart'
    as _i7;
import 'package:teste_tokenlab/data/cache_model/model/movies/movie_cm.dart'
    as _i8;
import 'package:teste_tokenlab/data/cache_model/model/movies_details/details/movie_details_cm.dart'
    as _i3;
import 'package:teste_tokenlab/data/remote/movie/model/movie_details/details/movie_details_rm.dart'
    as _i2;
import 'package:teste_tokenlab/data/remote/movie/model/movies/movie_rm.dart'
    as _i6;
import 'package:teste_tokenlab/data/remote/movie/remote_data_source/movie_remote_data_source.dart'
    as _i4;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeMovieDetailsRM_0 extends _i1.Fake implements _i2.MovieDetailsRM {}

class _FakeMovieDetailsCM_1 extends _i1.Fake implements _i3.MovieDetailsCM {}

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i4.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.MovieDetailsRM> fetchMovieDetails(int? movieId) =>
      (super.noSuchMethod(Invocation.method(#fetchMovieDetails, [movieId]),
              returnValue:
                  Future<_i2.MovieDetailsRM>.value(_FakeMovieDetailsRM_0()))
          as _i5.Future<_i2.MovieDetailsRM>);
  @override
  _i5.Future<List<_i6.MovieRM>> fetchMovieList() =>
      (super.noSuchMethod(Invocation.method(#fetchMovieList, []),
              returnValue: Future<List<_i6.MovieRM>>.value(<_i6.MovieRM>[]))
          as _i5.Future<List<_i6.MovieRM>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [MovieCacheDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieCacheDataSource extends _i1.Mock
    implements _i7.MovieCacheDataSource {
  MockMovieCacheDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i8.MovieCM>> getMovieList() =>
      (super.noSuchMethod(Invocation.method(#getMovieList, []),
              returnValue: Future<List<_i8.MovieCM>>.value(<_i8.MovieCM>[]))
          as _i5.Future<List<_i8.MovieCM>>);
  @override
  _i5.Future<void> saveMovieList(List<_i8.MovieCM>? movieListCM) =>
      (super.noSuchMethod(Invocation.method(#saveMovieList, [movieListCM]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<_i3.MovieDetailsCM> getMovieDetails(int? movieId) =>
      (super.noSuchMethod(Invocation.method(#getMovieDetails, [movieId]),
              returnValue:
                  Future<_i3.MovieDetailsCM>.value(_FakeMovieDetailsCM_1()))
          as _i5.Future<_i3.MovieDetailsCM>);
  @override
  _i5.Future<void> saveMovieDetails(_i3.MovieDetailsCM? movieDetailsCM) =>
      (super.noSuchMethod(
          Invocation.method(#saveMovieDetails, [movieDetailsCM]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<List<int>> getFavoriteMovieIdList() => (super.noSuchMethod(
      Invocation.method(#getFavoriteMovieIdList, []),
      returnValue: Future<List<int>>.value(<int>[])) as _i5.Future<List<int>>);
  @override
  _i5.Future<void> removeFavoriteMovieId(int? movieId) =>
      (super.noSuchMethod(Invocation.method(#removeFavoriteMovieId, [movieId]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> addFavoriteMovieId(int? movieId) =>
      (super.noSuchMethod(Invocation.method(#addFavoriteMovieId, [movieId]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  String toString() => super.toString();
}
